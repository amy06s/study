#include <iostream>
#include <vector>
#include <algorithm> //sort, find

using namespace std;

template<typename T>
void printVector(vector<T>& v) {
    typename vector<T>::iterator it;
    for (it = v.begin(); it != v.end(); ++it) {
        cout << *it << " "<<endl;
    }
}

int main() {
    //1. 정수형 벡터 생성 및 출력
    vector<int> numbers = { 4, 7, 1, 8, 3, 9 };

    cout << "기존 벡터 숫자들: ";
    printVector(numbers);

    sort(numbers.begin(), numbers.end());

    cout << "정렬된 벡터 숫자들: ";
    printVector(numbers);
    //3. 특정 값 검색(find)
    int target = 7;
    auto it = find(numbers.begin(), numbers.end(), target);
    if (it != numbers.end()) {
        cout << target << " 의 index: " << distance(numbers.begin(), it) << endl;
    }
    else {
        cout << target << " not found in the vector." << endl;
    }
    //4. 문자열 벡터 정렬
    vector<string> fruits = { "banana", "apple", "grape", "orange" };

    cout << "\n기존 벡터 과일들: ";
    printVector(fruits);

    sort(fruits.begin(), fruits.end());

    cout << "정렬된 벡터 과일들: ";
    printVector(fruits);

    // 5. 특정 문자열 검색
    string s = "apple";
    auto it2 = find(fruits.begin(), fruits.end(), s);
    if (it2 != fruits.end()) {
        cout << s << " 의 index: " << distance(fruits.begin(), it2) << endl;
    }
    else {
        cout << s << " not found in the vector." << endl;
    }

    return 0;
}
